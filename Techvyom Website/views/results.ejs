<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Database Results - TECHVYOM 2025</title>
  <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@600&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
  <style>
    body {
      margin: 0;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: radial-gradient(circle at top, #001f3f, #000);
      color: #fff;
      padding-top: 90px; /* Adjusted for larger nav */
    }

    /* Super-Stylish Navigation Bar (matching confirmation.ejs) */
    nav {
      display: flex;
      justify-content: space-between;
      align-items: center;
      background: rgba(0, 15, 30, 0.6);
      backdrop-filter: blur(12px);
      padding: 15px 30px;
      position: fixed;
      width: 100%;
      top: 0;
      z-index: 1000;
      box-shadow: 0 5px 25px rgba(0, 0, 0, 0.8), 0 0 10px rgba(0, 255, 200, 0.3);
      border-bottom: 1px solid rgba(0, 255, 200, 0.2);
      transition: all 0.4s cubic-bezier(0.165, 0.84, 0.44, 1);
      overflow: hidden;
      box-sizing: border-box;
    }

    nav::before {
      content: '';
      position: absolute;
      top: -100%;
      left: 0;
      width: 100%;
      height: 100%;
      background: linear-gradient(to bottom, 
        rgba(0, 255, 200, 0.05) 0%, 
        transparent 100%);
      transition: all 0.5s ease;
      pointer-events: none;
    }

    nav:hover::before {
      top: 0;
    }

    nav::after {
      content: '';
      position: absolute;
      bottom: 0;
      left: -100%;
      width: 100%;
      height: 2px;
      background: linear-gradient(90deg, 
        transparent, 
        rgba(0, 255, 200, 0.5),
        transparent);
      transition: left 1.5s ease;
    }

    nav:hover::after {
      left: 100%;
    }

    nav .logo-container {
      display: flex;
      align-items: center;
      gap: 15px;
      position: relative;
      z-index: 2;
    }

    .logo-glow {
      position: absolute;
      width: 100%;
      height: 100%;
      background: radial-gradient(circle, rgba(0, 255, 200, 0.4) 0%, transparent 70%);
      filter: blur(10px);
      opacity: 0;
      transition: opacity 0.5s ease;
    }

    nav .logo-container:hover .logo-glow {
      opacity: 1;
    }

    nav .logo-icon {
      font-size: 2rem;
      color: #00ffc8;
      animation: pulse 2s infinite ease-in-out;
      position: relative;
      display: flex;
      align-items: center;
      justify-content: center;
      background: rgba(0, 31, 63, 0.6);
      width: 50px;
      height: 50px;
      border-radius: 10px;
      box-shadow: 0 0 15px rgba(0, 255, 200, 0.4);
      border: 1px solid rgba(0, 255, 200, 0.3);
      transition: all 0.3s ease;
    }

    nav .logo-container:hover .logo-icon {
      transform: rotate(360deg);
      box-shadow: 0 0 20px rgba(0, 255, 200, 0.6);
    }

    nav .logo {
      font-size: 2rem;
      font-weight: bold;
      color: #00ffc8;
      font-family: 'Orbitron', sans-serif;
      text-shadow: 0 0 10px rgba(0, 255, 200, 0.5);
      position: relative;
      letter-spacing: 2px;
      transition: all 0.3s ease;
    }

    nav .logo-container:hover .logo {
      letter-spacing: 3px;
      text-shadow: 0 0 15px rgba(0, 255, 200, 0.8);
    }

    nav .logo::after {
      content: '';
      position: absolute;
      bottom: -8px;
      left: 0;
      width: 0;
      height: 3px;
      background: linear-gradient(90deg, #00ffc8, #00c8ff);
      transition: width 0.5s cubic-bezier(0.19, 1, 0.22, 1);
      border-radius: 2px;
    }

    nav .logo-container:hover .logo::after {
      width: 100%;
    }

    nav ul {
      list-style: none;
      display: flex;
      gap: 20px;
      margin: 0;
      padding: 0;
      position: relative;
      z-index: 2;
    }

    nav ul li {
      position: relative;
    }

    nav ul li a {
      color: #c0f0ff;
      text-decoration: none;
      font-size: 1rem;
      font-weight: 500;
      padding: 12px 20px;
      border: 1px solid rgba(0, 255, 200, 0.15);
      border-radius: 30px;
      transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
      display: flex;
      align-items: center;
      gap: 8px;
      background: rgba(0, 31, 63, 0.3);
      position: relative;
      overflow: hidden;
      backdrop-filter: blur(5px);
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
    }

    nav ul li a i {
      font-size: 1.2rem;
      transition: all 0.3s ease;
    }

    nav ul li a::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, 
        transparent, 
        rgba(0, 255, 200, 0.1), 
        transparent);
      transition: all 0.6s ease;
      z-index: -1;
    }

    nav ul li a:hover::before {
      left: 100%;
    }

    nav ul li a::after {
      content: '';
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 3px;
      background: linear-gradient(90deg, #00ffc8, #00c8ff);
      transform: scaleX(0);
      transform-origin: right;
      transition: transform 0.5s ease;
      opacity: 0;
    }

    nav ul li a:hover::after {
      transform: scaleX(1);
      transform-origin: left;
      opacity: 1;
    }

    nav ul li a:hover {
      color: #00ffc8;
      border-color: rgba(0, 255, 200, 0.5);
      transform: translateY(-5px);
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3), 0 0 15px rgba(0, 255, 200, 0.3);
      background: rgba(0, 31, 63, 0.6);
      letter-spacing: 1px;
    }

    nav ul li a:hover i {
      transform: scale(1.3);
      color: #00ffc8;
    }

    /* Active item styling */
    nav ul li a.active {
      color: #00ffc8;
      background: rgba(0, 31, 63, 0.6);
      border-color: rgba(0, 255, 200, 0.4);
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3), 0 0 10px rgba(0, 255, 200, 0.2);
    }

    nav ul li a.active::after {
      transform: scaleX(1);
      opacity: 1;
    }

    .nav-indicator {
      position: absolute;
      top: -10px;
      right: -10px;
      width: 6px;
      height: 6px;
      border-radius: 50%;
      background: #00ffc8;
      box-shadow: 0 0 10px #00ffc8;
      opacity: 0;
      transition: opacity 0.3s ease;
    }

    nav ul li a:hover .nav-indicator {
      opacity: 1;
    }

    .database-tabs {
      display: flex;
      justify-content: center;
      gap: 20px;
      margin-bottom: 30px;
    }

    .tab-btn {
      padding: 10px 20px;
      background-color: rgba(0, 31, 63, 0.5);
      color: #c0f0ff;
      border: 1px solid rgba(0, 255, 200, 0.3);
      border-radius: 8px;
      cursor: pointer;
      font-weight: bold;
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      gap: 5px;
      text-decoration: none;
    }

    .tab-btn.active {
      background-color: rgba(0, 255, 200, 0.2);
      color: #00ffc8;
      border-color: #00ffc8;
      box-shadow: 0 5px 15px rgba(0, 255, 200, 0.2);
    }

    .tab-btn:hover {
      background-color: rgba(0, 255, 200, 0.2);
      transform: translateY(-2px);
    }

    .container {
      max-width: 1200px;
      margin: 120px auto 40px;
      padding: 30px;
      background: rgba(0, 0, 0, 0.7);
      border-radius: 20px;
      box-shadow: 0 0 20px #00ffc8;
      overflow-x: auto;
    }

    h2 {
      text-align: center;
      font-family: 'Orbitron', sans-serif;
      color: #00ffc8;
      margin-bottom: 30px;
    }

    .search-box {
      display: flex;
      flex-wrap: nowrap;
      gap: 10px;
      overflow-x: auto;
      margin-bottom: 20px;
    }

    .search-box input {
      padding: 8px;
      font-size: 1rem;
      border-radius: 5px;
      border: 1px solid #ccc;
      transition: all 0.3s ease;
      flex: 1 1 auto;
      min-width: 120px;
    }

    .search-box input:hover {
      transform: scale(1.1);
      z-index: 1;
    }

    .table-container {
      width: 100%;
      overflow-x: auto;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 20px;
      table-layout: fixed;
      min-width: 1100px;
    }

    table th, table td {
      padding: 12px;
      border: 1px solid #ccc;
      text-align: left;
      word-wrap: break-word;
    }

    table th {
      background-color: #333;
    }

    table tbody tr:hover {
      background-color: rgba(0, 255, 200, 0.1);
      transition: 0.3s ease;
    }

    .actions-col {
      width: 150px;
      text-align: center;
    }

    /* Enhanced Edit Button Styling */
    .edit-btn {
      background: linear-gradient(135deg, #4f94ff, #0066ff);
      color: white;
      border: none;
      padding: 8px 12px;
      border-radius: 8px;
      cursor: pointer;
      font-weight: bold;
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      gap: 5px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      margin-right: 5px;
    }

    .edit-btn:hover {
      background: linear-gradient(135deg, #0066ff, #0044cc);
      transform: translateY(-2px);
      box-shadow: 0 6px 10px rgba(0, 0, 0, 0.2);
    }

    .edit-btn i {
      transition: all 0.3s ease;
    }

    .edit-btn:hover i {
      transform: scale(1.2);
    }

    /* Enhanced Delete Button Styling */
    .delete-btn {
      background: linear-gradient(135deg, #ff4f4f, #cc0000);
      color: white;
      border: none;
      padding: 8px 12px;
      border-radius: 8px;
      cursor: pointer;
      font-weight: bold;
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      gap: 5px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .delete-btn:hover {
      background: linear-gradient(135deg, #cc0000, #990000);
      transform: translateY(-2px);
      box-shadow: 0 6px 10px rgba(0, 0, 0, 0.2);
    }

    .delete-btn i {
      transition: all 0.3s ease;
    }

    .delete-btn:hover i {
      transform: scale(1.2);
    }

    .message {
      background-color: #00ffc8;
      color: black;
      padding: 10px;
      margin-bottom: 20px;
      border-radius: 5px;
      text-align: center;
      display: none;
    }
    
    .print-btn {
      padding: 10px 20px;
      background-color: #ff9900;
      color: white;
      border: 1px solid rgba(255, 153, 0, 0.3);
      border-radius: 8px;
      cursor: pointer;
      font-weight: bold;
      transition: all 0.3s ease;
      display: flex;
      align-items: center;
      gap: 5px;
      text-decoration: none;
    }
    
    .print-btn:hover {
      background-color: #ff8800;
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(255, 153, 0, 0.2);
    }
    
    /* Modal styles */
    .modal {
      display: none;
      position: fixed;
      z-index: 1050;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background-color: rgba(0, 0, 0, 0.7);
    }

    .modal-content {
      background: rgba(0, 31, 63, 0.95);
      margin: 5% auto;
      padding: 20px;
      border: 1px solid #00ffc8;
      border-radius: 15px;
      width: 80%;
      max-width: 700px;
      box-shadow: 0 0 25px rgba(0, 255, 200, 0.5);
      animation: modalFadeIn 0.3s;
      max-height: 90vh;
      overflow-y: auto;
    }
    
    @keyframes modalFadeIn {
      from {opacity: 0; transform: translateY(-30px);}
      to {opacity: 1; transform: translateY(0);}
    }

    .modal-header {
      padding: 10px 0;
      border-bottom: 1px solid rgba(0, 255, 200, 0.3);
      margin-bottom: 20px;
    }

    .modal-header h3 {
      margin: 0;
      color: #00ffc8;
      font-family: 'Orbitron', sans-serif;
    }

    .modal-body {
      margin-bottom: 20px;
    }

    .close {
      color: #aaa;
      float: right;
      font-size: 28px;
      font-weight: bold;
      cursor: pointer;
    }

    .close:hover,
    .close:focus {
      color: #00ffc8;
      text-decoration: none;
    }
    
    .form-group {
      margin-bottom: 15px;
    }
    
    .form-group label {
      display: block;
      margin-bottom: 5px;
      color: #00ffc8;
    }
    
    .form-group input, .form-group select {
      width: 100%;
      padding: 8px;
      border-radius: 5px;
      border: 1px solid #ccc;
      background: rgba(0, 0, 0, 0.3);
      color: white;
      font-size: 1rem;
      box-sizing: border-box;
    }
    
    .save-btn {
      background-color: #00ffc8;
      color: black;
      border: none;
      padding: 10px 20px;
      border-radius: 5px;
      cursor: pointer;
      font-weight: bold;
      margin-top: 10px;
    }
    
    .save-btn:hover {
      background-color: #00e0b0;
    }
    
    .events-selection {
      max-height: 300px;
      overflow-y: auto;
      background: rgba(0, 0, 0, 0.2);
      padding: 10px;
      border-radius: 5px;
    }
    
    .club-btn {
      display: block;
      width: 100%;
      padding: 8px 12px;
      margin-bottom: 5px;
      background: rgba(0, 31, 63, 0.8);
      color: #00ffc8;
      border: 1px solid rgba(0, 255, 200, 0.3);
      border-radius: 5px;
      text-align: left;
      cursor: pointer;
      font-weight: bold;
      transition: all 0.3s ease;
    }
    
    .club-btn:hover {
      background-color: rgba(0, 255, 200, 0.2);
    }
    
    .event-options {
      display: none;
      margin-left: 15px;
      margin-bottom: 10px;
    }
    
    .event-options label {
      display: block;
      padding: 5px;
      margin-bottom: 3px;
      cursor: pointer;
    }
    
    .event-options label:hover {
      background-color: rgba(0, 255, 200, 0.1);
      border-radius: 3px;
    }
    
    .arrow {
      float: right;
    }

    @keyframes pulse {
      0%, 100% { transform: scale(1); opacity: 1; }
      50% { transform: scale(1.1); opacity: 0.8; }
    }

    /* Password Modal Styles */
    .password-error {
      color: #ff4f4f;
      margin-top: 10px;
      display: none;
    }

    /* Password Modal Specific Styles */
    #passwordModal .modal-content {
      max-width: 400px;
    }

    #passwordModal .modal-body {
      padding: 20px;
    }

    #confirm-password-btn {
      width: 100%;
      padding: 12px;
      font-size: 1rem;
      margin-top: 15px;
    }

    #admin-password {
      width: 100%;
      padding: 10px;
      margin-top: 5px;
      font-size: 1rem;
    }
  </style>
</head>
<body>

  <nav>
    <div class="logo-container">
      <div class="logo-glow"></div>
      <div class="logo-icon"><i class="fas fa-microchip"></i></div>
      <div class="logo">TECHVYOM 2025</div>
    </div>
    <ul>
      <li>
        <a href="home.html">
          <i class="fas fa-home"></i> Home
          <span class="nav-indicator"></span>
        </a>
      </li>
      <li>
        <a href="about.html">
          <i class="fas fa-info-circle"></i> About
          <span class="nav-indicator"></span>
        </a>
      </li>
      <li>
        <a href="events.html">
          <i class="fas fa-calendar-alt"></i> Events
          <span class="nav-indicator"></span>
        </a>
      </li>
      <li>
        <a href="register.html">
          <i class="fas fa-user-plus"></i> Registration
          <span class="nav-indicator"></span>
        </a>
      </li>
      
      <li>
        <a href="contact.html">
          <i class="fas fa-envelope"></i> Contact
          <span class="nav-indicator"></span>
        </a>
      </li>
    </ul>
  </nav>

  <div class="container">
    <h2>Database Results</h2>
    <div id="message" class="message"></div>

    <div class="database-tabs">
      <a href="/results" class="tab-btn active"><i class="fas fa-user"></i> Individual Registrations</a>
      <a href="/team-results" class="tab-btn"><i class="fas fa-users"></i> Team Registrations</a>
      <a href="/print-lists?type=individual" class="print-btn"><i class="fas fa-print"></i> Print Event Lists</a>
    </div>

    <div class="search-box">
      <input type="text" id="search-pid" placeholder="Search by PID" oninput="filterTable()">
      <input type="text" id="search-name" placeholder="Search by Name" oninput="filterTable()">
      <input type="text" id="search-phone" placeholder="Search by Phone" oninput="filterTable()">
      
      <input type="text" id="search-rollno" placeholder="Search by Roll No" oninput="filterTable()">
      
      <input type="text" id="search-college" placeholder="Search by College" oninput="filterTable()">
      <input type="text" id="search-course" placeholder="Search by Course" oninput="filterTable()">
      <input type="text" id="search-year" placeholder="Search by Year" oninput="filterTable()">
    </div>

    <div class="table-container">
      <table id="results-table">
        <thead>
          <tr>
            <th>ID</th>
            <th>PID</th>
            <th>Full Name</th>
            <th>Phone Number</th>
            
            <th>Roll Number</th>
            
            <th>College Name</th>
            <th>Course</th>
            <th>Year</th>
            <th>Events</th>
            <th class="actions-col">Actions</th>
          </tr>
        </thead>
        <tbody>
          <% results.forEach(result => { %>
            <tr data-id="<%= result.id %>">
              <td><%= result.id %></td>
              <td><%= result.pid %></td>
              <td><%= result.name %></td>
              <td><%= result.phoneno %></td>
              
              <td><%= result.rollno %></td>
              
              <td><%= result.college %></td>
              <td><%= result.course %></td>
              <td><%= result.year %></td>
              <td>
                <% if (result.events && result.events.length > 0) { %>
                  <ul>
                    <% result.events.forEach(event => { %>
                      <li><%= event %></li>
                    <% }) %>
                  </ul>
                <% } else { %>
                  No events selected
                <% } %>
              </td>
              <td class="actions-col">
                <button class="edit-btn" data-id="<%= result.id %>">
                  <i class="fas fa-edit"></i> Edit
                </button>
                <button class="delete-btn" data-id="<%= result.id %>">
                  <i class="fas fa-trash"></i> Delete
                </button>
              </td>
            </tr>
          <% }) %>
        </tbody>
      </table>
    </div>
  </div>

  <!-- Edit Modal -->
  <div id="editModal" class="modal">
    <div class="modal-content">
      <div class="modal-header">
        <span class="close" onclick="closeModal()">&times;</span>
        <h3>Edit Registration</h3>
      </div>
      <div class="modal-body">
        <form id="editForm">
          <input type="hidden" id="edit-id">
          <div class="form-group">
            <label for="edit-pid">PID</label>
            <input type="text" id="edit-pid" readonly>
          </div>
          <div class="form-group">
            <label for="edit-name">Full Name</label>
            <input type="text" id="edit-name" required>
          </div>
          <div class="form-group">
            <label for="edit-phoneno">Phone Number</label>
            <input type="text" id="edit-phoneno" required>
          </div>
          
          <div class="form-group">
            <label for="edit-rollno">Roll Number</label>
            <input type="text" id="edit-rollno" required>
          </div>
          
          <div class="form-group">
            <label for="edit-college">College Name</label>
            <input type="text" id="edit-college" required>
          </div>
          <div class="form-group">
            <label for="edit-course">Course</label>
            <input type="text" id="edit-course" required>
          </div>
          <div class="form-group">
            <label for="edit-year">Year</label>
            <select id="edit-year" required>
              <option value="1st Year">1st Year</option>
              <option value="2nd Year">2nd Year</option>
              <option value="3rd Year">3rd Year</option>
              <option value="4th Year">4th Year</option>
              <option value="5th Year">5th Year</option>
            </select>
          </div>
          <div class="form-group">
            <label>Events</label>
            <div class="events-selection">
              <!-- Illuminati Club -->
            <!--  -->
          <button type="button" class="club-btn" data-target="illuminatiEvents">
            Illuminati Club <span class="arrow">▼</span>
          </button>
          <div class="event-options" id="illuminatiEvents">
            <label>
              <input type="checkbox" name="events" value="Illuminati Club - Code Quest"> Code Quest (2:0 pm -3:0 pm IT Lab)
            </label>
            
            <label>
              <input type="checkbox" name="events" value="Illuminati Club - Code Breakers"> Code Breakers (3:30 pm -4:30 pm Lab 2a)
            </label>
          </div>
          
          <!-- Equinox Club -->
          <button type="button" class="club-btn" data-target="equinoxEvents">
            Equinox Club <span class="arrow">▼</span>
          </button>
          <div class="event-options" id="equinoxEvents">
            
            
            <label>
              <input type="checkbox" name="events" value="Equinox Club - Big Bounty"> Big Bounty (2:30 pm -3:30 pm Lab 2d+2a)
            </label>
          </div>


          <!-- Synergy Club -->
          <button type="button" class="club-btn" data-target="synergyEvents">
            Synergy Club <span class="arrow">▼</span>
          </button>
          <div class="event-options" id="synergyEvents">
            <label>
              <input type="checkbox" name="events" value="Synergy Club - Junk Wars"> Junk Wars (2:30 pm -3:30pm Network Lab)
            </label>
           
          </div>




          





          




          <!-- Literary Club -->
          <button type="button" class="club-btn" data-target="literaryEvents">
            Literary Club <span class="arrow">▼</span>
          </button>
          <div class="event-options" id="literaryEvents">
            
            <label>
              <input type="checkbox" name="events" value="Literary Club - Verses of the Valley"> Verses of the Valley (2:00 pm - 3:00 pm  Centennial Auditorium)
            </label>
            <label>
              <input type="checkbox" name="events" value="Literary Club - Extempore"> Extempore (12:00 am- 12:45 pm EC Seminar Hall)
            </label>
          </div>




          



          



          <!-- Media Relation Club -->
          <button type="button" class="club-btn" data-target="mediarelationEvents">
            Media Relation Club <span class="arrow">▼</span>
          </button>
          <div class="event-options" id="mediarelationEvents">
            
            <label>
              <input type="checkbox" name="events" value="Media Relation Club - Create Logo"> Create Logo (8:30 am - 9:30 am Lab b CC)
            </label>

          </div>
            </div>
          </div>
          <button type="submit" class="save-btn">Save Changes</button>
        </form>
      </div>
    </div>
  </div>

  <!-- Password Modal -->
  <div id="passwordModal" class="modal">
    <div class="modal-content" style="max-width: 400px;">
      <div class="modal-header">
        <span class="close" onclick="closePasswordModal()">&times;</span>
        <h3>Admin Authentication</h3>
      </div>
      <div class="modal-body">
        <div class="form-group">
          <label for="admin-password">Enter Admin Password:</label>
          <input type="password" id="admin-password" class="member-search-input">
        </div>
        <button type="button" id="confirm-password-btn" class="save-btn">Confirm</button>
        <div id="password-error" class="password-error"></div>
      </div>
    </div>
  </div>

  <script>
    // Password configuration - CHANGE THIS TO YOUR PASSWORD
    const ADMIN_PASSWORD = "EaSy";

    // Track the pending action
    let pendingAction = {
      type: null,
      id: null
    };

    // Filter table based on search inputs
    function filterTable() {
      const pid = document.getElementById('search-pid').value.toLowerCase();
      const name = document.getElementById('search-name').value.toLowerCase();
      const phone = document.getElementById('search-phone').value.toLowerCase();
      
      const rollno = document.getElementById('search-rollno').value.toLowerCase();
      
      const college = document.getElementById('search-college').value.toLowerCase();
      const course = document.getElementById('search-course').value.toLowerCase();
      const year = document.getElementById('search-year').value.toLowerCase();
      
      const rows = document.querySelectorAll('#results-table tbody tr');
      
      rows.forEach(row => {
        const rowPid = row.cells[1].textContent.toLowerCase();
        const rowName = row.cells[2].textContent.toLowerCase();
        const rowPhone = row.cells[3].textContent.toLowerCase();
        
        const rowRollno = row.cells[5].textContent.toLowerCase();
        
        const rowCollege = row.cells[7].textContent.toLowerCase();
        const rowCourse = row.cells[8].textContent.toLowerCase();
        const rowYear = row.cells[9].textContent.toLowerCase();
        
        if (
          rowPid.includes(pid) &&
          rowName.includes(name) &&
          rowPhone.includes(phone) &&
          
          rowRollno.includes(rollno) &&
          
          rowCollege.includes(college) &&
          rowCourse.includes(course) &&
          rowYear.includes(year)
        ) {
          row.style.display = '';
        } else {
          row.style.display = 'none';
        }
      });
    }
    
    // Modal handling
    const modal = document.getElementById('editModal');
    const passwordModal = document.getElementById('passwordModal');
    
    function openEditModal(id) {
      pendingAction = {
        type: 'edit',
        id: id
      };
      document.getElementById('password-error').style.display = 'none';
      document.getElementById('admin-password').value = '';
      passwordModal.style.display = 'block';
      document.getElementById('admin-password').focus();
    }

    function openDeleteModal(id) {
      pendingAction = {
        type: 'delete',
        id: id
      };
      document.getElementById('password-error').style.display = 'none';
      document.getElementById('admin-password').value = '';
      passwordModal.style.display = 'block';
      document.getElementById('admin-password').focus();
    }

    function verifyPassword() {
      const enteredPassword = document.getElementById('admin-password').value;
      
      if (enteredPassword === ADMIN_PASSWORD) {
        passwordModal.style.display = 'none';
        
        if (pendingAction.type === 'edit') {
          _openEditModal(pendingAction.id);
        } else if (pendingAction.type === 'delete') {
          _confirmDelete(pendingAction.id);
        }
      } else {
        document.getElementById('password-error').style.display = 'block';
        document.getElementById('password-error').textContent = 'Incorrect password!';
        document.getElementById('admin-password').focus();
      }
    }

    function closePasswordModal() {
      passwordModal.style.display = 'none';
      pendingAction = {
        type: null,
        id: null
      };
    }

    // Edit button handler
function _openEditModal(id) {
  console.log('Fetching registration data for ID:', id);
  
  fetch(`/api/registration/${id}`)
    .then(response => {
      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }
      return response.json();
    })
    .then(data => {
      console.log('Received data:', data);
      
      document.getElementById('edit-id').value = data._id;
      document.getElementById('edit-pid').value = data.pid;
      document.getElementById('edit-name').value = data.name;
      document.getElementById('edit-phoneno').value = data.phoneno;
      document.getElementById('edit-rollno').value = data.rollno;
      document.getElementById('edit-college').value = data.college;
      document.getElementById('edit-course').value = data.course;
      document.getElementById('edit-year').value = data.year;
      
      // Clear all checkboxes first
      document.querySelectorAll('input[name="events"]').forEach(checkbox => {
        checkbox.checked = false;
      });
      
      // Check selected events
      if (data.events && data.events.length > 0) {
        data.events.forEach(event => {
          const checkbox = document.querySelector(`input[name="events"][value="${event}"]`);
          if (checkbox) checkbox.checked = true;
        });
      }
      
      modal.style.display = 'block';
    })
    .catch(error => {
      console.error('Error fetching registration:', error);
      showMessage(`Error fetching registration data: ${error.message}`, false);
    });
}
    
    function closeModal() {
      modal.style.display = 'none';
    }
    
    // Close modal when clicking outside
    window.onclick = function(event) {
      if (event.target === modal) {
        closeModal();
      }
      if (event.target === passwordModal) {
        closePasswordModal();
      }
    };
    
    // Toggle event options
    document.querySelectorAll('.club-btn').forEach(button => {
      button.addEventListener('click', function() {
        const targetId = this.getAttribute('data-target');
        const targetElement = document.getElementById(targetId);
        
        if (targetElement.style.display === 'block') {
          targetElement.style.display = 'none';
          this.querySelector('.arrow').textContent = '▼';
        } else {
          targetElement.style.display = 'block';
          this.querySelector('.arrow').textContent = '▲';
        }
      });
    });
    
    // Handle edit form submission
    document.getElementById('editForm').addEventListener('submit', function(e) {
      e.preventDefault();
      
      const id = document.getElementById('edit-id').value;
      const name = document.getElementById('edit-name').value;
      const phoneno = document.getElementById('edit-phoneno').value;
      
      const rollno = document.getElementById('edit-rollno').value;
      
      const college = document.getElementById('edit-college').value;
      const course = document.getElementById('edit-course').value;
      const year = document.getElementById('edit-year').value;
      
      // Get selected events
      const events = [];
      document.querySelectorAll('input[name="events"]:checked').forEach(checkbox => {
        events.push(checkbox.value);
      });
      
      // Send update request
      fetch(`/api/registration/${id}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          name,
          phoneno,
          
          rollno,
          
          college,
          course,
          year,
          events
        }),
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          closeModal();
          showMessage('Registration updated successfully', true);
          setTimeout(() => {
            location.reload();
          }, 1000);
        } else {
          showMessage('Error updating registration', false);
        }
      })
      .catch(error => {
        console.error('Error:', error);
        showMessage('Error updating registration', false);
      });
    });

    // Delete confirmation
    // Delete handler
function _confirmDelete(id) {
  console.log('Deleting registration with ID:', id);
  
  fetch(`/api/registration/${id}`, {
    method: 'DELETE',
    headers: {
      'Content-Type': 'application/json',
    }
  })
  .then(response => {
    if (!response.ok) {
      return response.json().then(errData => {
        throw new Error(errData.message || 'Delete failed');
      });
    }
    return response.json();
  })
  .then(data => {
    console.log('Delete response:', data);
    showMessage(data.message || 'Registration deleted successfully', true);
    
    // Remove the row from the table
    const row = document.querySelector(`tr[data-id="${id}"]`);
    if (row) {
      row.style.transition = 'opacity 0.5s';
      row.style.opacity = '0';
      setTimeout(() => row.remove(), 500);
    }
  })
  .catch(error => {
    console.error('Delete error:', error);
    showMessage(`Delete failed: ${error.message}`, false);
  });
}
    
    // Show message
    function showMessage(text, isSuccess) {
      const messageElem = document.getElementById('message');
      messageElem.textContent = text;
      messageElem.style.backgroundColor = isSuccess ? '#4fff73' : '#ff4f4f';
      messageElem.style.display = 'block';
      
      setTimeout(() => {
        messageElem.style.display = 'none';
      }, 3000);
    }
    
    // Add active class to navigation item
    document.addEventListener('DOMContentLoaded', function() {
      const currentPath = window.location.pathname;
      const navLinks = document.querySelectorAll('nav ul li a');
      
      navLinks.forEach(link => {
        if ((currentPath === '/results' && link.textContent.includes('Registration')) ||
            (currentPath === '/team-results' && link.textContent.includes('Team Registration'))) {
          link.classList.add('active');
        }
      });

      // Set up event listeners for edit and delete buttons
      document.querySelectorAll('.edit-btn').forEach(btn => {
        btn.addEventListener('click', function() {
          const id = this.getAttribute('data-id');
          openEditModal(id);
        });
      });

      document.querySelectorAll('.delete-btn').forEach(btn => {
        btn.addEventListener('click', function() {
          const id = this.getAttribute('data-id');
          openDeleteModal(id);
        });
      });

      // Password modal events
      document.getElementById('confirm-password-btn').addEventListener('click', verifyPassword);
      
      document.getElementById('admin-password').addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
          verifyPassword();
        }
      });
    });
  </script>
</body>
</html>